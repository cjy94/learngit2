package com.chenjunyi.practice;

/**
 * 联通两块岛的最短桥连点
 *
 *
 *  二维表变一维表
 *
 *  二维坐标          一维坐标
 *   (i,j) --->   (i * 列数 + j)
 *
 *   一个6行5列的二维矩阵，变成一维数组的下标变换是：
 *   [(0,0) (0,1) (0,2) (0,3) (0,4)
 *    (1,0) (1,1) (1,2) (1,3) (1,4)
 *    (2,0) (2,1) (2,2) (2,3) (2,4)
 *    (3,0) (3,1) (3,2) (3,3) (3,4)
 *    (4,0) (4,1) (4,2) (4,3) (4,4)
 *    (5,0) (5,1) (5,2) (5,3) (5,4)]
 *
 *    一维数组长度是： 6*5   (i*列数+j)
 *    [0,1,2,3 ... 29]
 *
 *    第一列的下标是
 *    (0,0)     0*5+0 =0
 *    (1,0)     1*5+0 =5
 *    (2,0)     2*5+0 =10
 *    (3,0)     3*5+0 =15
 *    (4,0)     4*5+0 =20
 *    (5,0)     5*5+0 =25
 *    判断某个一维坐标在二维数组中是否是第一列的公式： a%列数 == 0
 *
 *    
 *    最后一列的下标是：
 *    (0,4)     0*5+4 =4
 *    (1,4)     1*5+4 =9
 *    (2,4)     2*5+4 =14
 *    (3,4)     3*5+4 =19
 *    (4,4)     4*5+4 =24
 *    (5,4)     5*5+4 =29
 *    判断某个一维坐标在二维数组中是否是最后一列的公式： a%列数 == 列数-1
 *
 *
 *    第一行的坐标：
 *    (0,0)     0*5+0 =0
 *    (0,1)     0*5+1 =1
 *    (0,2)     0*5+2 =2
 *    (0,3)     0*5+3 =3
 *    (0,4)     0*5+4 =4
 *    判断某个一维坐标在二维数组中是否是第一行的公式： a/列数 == 0
 *
 *
 *    最后一行的坐标：
 *    (5,0)    5*5+0 =25
 *    (5,1)    5*5+1 =26
 *    (5,2)    5*5+2 =27
 *    (5,3)    5*5+3 =28
 *    (5,4)    5*5+4 =29
 *    判断某个一维坐标在二维数组中是否是第一行的公式： a/列数 == 行数-1
 *
 */
public class ShortedBridge {
}
