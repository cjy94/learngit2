高级7中重复题


1、给定一颗二叉树头节点head， 已知所有节点的值都不一样，返回其中最大的且符合搜索二叉树条件的最大拓扑大小
搜索二叉树子树 和 搜索二叉树树的拓扑大小


二叉树的递归套路

拓扑贡献记录： 给某一个确定的头节点可以贡献的价值




2、完美洗牌问题
给定一个长度为偶数的数组arr， 长度记为2*N。前N个为左部分，后N个为右部分。
arr就可以表示为{L1,L2...，Ln,R1,R2,...,Rn}，请将数组调整成{R1,L1,R2,L2,...,Rn,Ln}
要求原地调整，不能使用额外的空间

 找到一个公式，给定一个索引信息，可以计算出转换后的位置信息
  将数组划分成2个区域                   转换后
  左半区   1 <= i <= n                 i` = 2* i
  右半区   n+1 <= i <= 2n              i` = (i-n)*2-1

  利用下标循环怼的方式，将整个数组重新洗牌
    [a b c d]               n = 2
     1 2 3 4

     左半区： a b    i` = 2 * i
     右半区： c d    i` = (i-n)*2 -1

     start =1
     index = 1 -> nextIndex = 2
     index = 2 -> nextIndex = 4
     index = 4 -> nextIndex = 3
     index = 3 -> nextIndex = 1
     index = start 结束

     但是有些长度的数组不可以
     [a b c d e f g h]               所以长度为8的数组，需要执行2次的循环怼， 一个是从1开头，1个是从3开头
     左半区： a b c d     i` = 2 * i
     右半区： e f g h     i` = (i-n)*2-1

     start = 1
     index = 1 -> nextIndex = 2
     index = 2 -> nextIndex = 4
     index = 4 -> nextIndex = 8
     index = 8 -> nextIndex = 7
     index = 7 -> nextIndex = 5
     index = 5 -> nextIndex = 1
     index = start 结束

     但是index=3 和 index=6 还没有计算到
     start = 3
     index = 3 -> nextIndex = 6
     index = 6 -> nextIndex = 3
     index = start 结束

     2个循环结束


    如果整个数组的长度是 m = (3^k)-1 (k>=1)
    比如数组长度是： 2 8 26...  这种特殊长度的长度， 每个不同循环的出发点是1 3 9 ... 3^(k-1)
    数组长度是： 2 出发点 1
              8  出发点1 3
              26 出发点1 3 9


 将一个任意偶数长度的数组，拆分成很多个(3^k)-1长度的小数组，进行完美洗牌


3、一棵二叉树原本是搜索二叉树， 但是其中有两个节点调换了位置， 使得这颗二叉树不再是搜索二叉树，请找到这两个错误节点并返回

使用中序遍历二叉树， 如果是没有出错的搜索二叉树，那么数组中的元素一定是非降序排列的



