package com.chenjunyi.DynamicProgramming.子数组最大累加和问题;

/**
    可以翻转1次的情况下子数组的最大累加和
 给定一个数组nums，允许随意选择数组连续的一段进行翻转，也就是子数组逆序的调整
 比如翻转[-3,-4,5,6,-7,-8,3,4,-9]的[2~5]范围，得到[-3,-4,-8,-7,6,5,3,4,-9]   最大累加和的子数组: [6,5,3,4]
 返回必须随意翻转1次后，子数组的最大累加和


 可以随意翻转1次，就是可以翻转也可以不翻转

 不是有效的翻转操作：
 1、新数组最大累加和的部分是在原数组反转区域的内部
 原数组：   [-1,-2,3,(4,5,6),-8,-9]    翻转区域 [4,5,6]  -->  [6,5,4]
 翻转：    [-1,-2,3,(6,5,4),-8,-9]

 2、翻转区域把数组最大累加和的部分包住


  

 只有有明确划分界限的才是有效的翻转
 原数组：  [-4,-3,3,1,(-5,-6,4,2),-9]     翻转区域 [-5,-6,4,2]  -->  [2,4,-6,-5]
 翻转：    [-4,-3,3,1,(2,4,-6,-5),-9]


 */
public class FlipSubArrayMaximumSum {
}
