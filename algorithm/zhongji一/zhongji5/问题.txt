1、实现一个特殊的栈，在四线栈的基本功能的基础上，再实现返回栈中最小元素的操作：
1.1) pop，push，getMin操作的时间复杂度都是O(1);       1.2) 设计的栈类型可以使用现成的栈结构


思路： 使用2个栈，dataStack minStack,   数据栈中压入数据，最小栈中一直存放数据中的最小值



2、如何使用栈结构实现队列？  如何使用队列结构实现栈？

3、动态规划，数组压缩

4、给定一个数组arr，已知其中所有的值都时非负的， 将这个数组看作一个容器，请返回容器能装多少谁？
arr=[3,1,2,5,2,4], 根据值画出的直方图就是容器形状， 该容器可以装下多少水
ans += Math.max{ Math.min(max左， max右) - arr[i], 0}

5、给定一个数组arr长度为N， 可以把任意长度大于0且小于N的前缀作为左部分，剩下的作为右部分。 但是每种划分下都有左部分的最大值和右部分的最大值， 请返回最大的，
左部分最大值减去右部分最大值的绝对值

max- math.min(arr[0], arr[n-1])

6、如果一个字符串str，把字符串str前面任意的部分挪到后面形成的字符串较多str的旋转词。 比如： str="12345" str的旋转词"12345" "23451" "34512"
"45123" "51234"

a="cdab"  b="abcd"  true
a="1ab2"  b="ab12"  false
a="2ab1"  b="ab12"  true

拼接一个新字符串newStr=a+a="cdabcdab"  如果a字符串包含b字符串， 那么就是包含的，否则是不包含的


7、洗咖啡杯问题




