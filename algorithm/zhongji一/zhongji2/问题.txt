1、给定一个非负整数n，代表二叉树的节点，返回能形成多少种不同的二叉树结构

动态规划问题，
节点数0： 空树， 1种结构
节点数1， 一个节点，1种结构
节点数2， 2个节点，2种结构
节点数N， 1）左侧节点（或者右侧节点）为空， f(n-1); 2）左侧一个节点，右侧节点的数量（n-2）  1 * f(n-2)
        3）左侧i个节点，右侧节点数量（n-i-1） 左侧i个节点可能种类是f(i)， 右侧(n-i-1)节点可能的种类是f(n-i-1)


    for (int leftNum = 0; leftNum <= n-1; leftNum++) {
        int left = process(leftNum);
        int right = process(n - leftNum - 1);
        int res += left * right;
    }

2、一个完整的括号字符串的定义规则如下：
   1）空字符串是完整的
   2）如果s是完整的字符串， 那么(s)也是完整的
   3）如果s和t是完整的字符串，将他们连接起来形成的st也是完整的
   例如："(()())", ""和"(())()"是完整的括号字符串，"())(", "()("和")"是不完整的括号字符串

2.1 先解决判断括号是否是合格的
2.2 如果字符串是不合法的，那么至少需要添加多少个字符


补充： (和)组成的字符串， 请找到最长的有效括号子串， ()){()(())()}))(()) "{}"包裹起来的是最长的有效子串
求每个位置结尾的情况下，答案是多少？
dp[]: 表示子串必须以i位置字符结尾情况下，最长的有效子串长度是多少？
遇到'(' dp[i]=0




3、给定一个数组arr，求差值为k的去重数字对
hash表

4、给定一个包含n个整数元素的集合a，一个包含m个整数元素的集合b。
定义magic操作为，从一个集合中取出一个元素，放到另一个集合中，且操作过后每个集合的平均值都大于操作前
注意以下几点：
1） 不可以把一个集合的元素取空，这样就没有平均值了
2） 值为x的元素从集合b取出放入集合a，但集合a中已经有值为x的元素，则a的平均值不变（因为集合元素不会重复），b的平均值可能会改变（因为x被取出了）
问最多可以进行多少次magic操作？


平均值相等的时候，无法做magic操作
两个集合平均值不一样，不能从小的平均值中拿数值到大的集合中去
所以只能从大集合中往小集合中拿数据， 拿的数据的范围是： cur > lessAvg && cur < moreAvg

5、对栈中的元素进行排序

6、将给定的数转换成字符串，原则如下： 1对应a, 2对应b，... 26对应z， 例如12258

7、二叉树每个节点都有一个int型权值，给定一棵二叉树，要求计算出从根节点到叶节点的所有路径中，权值和最大的值为多少？
二叉树的递归套路
从根节点到叶子节点的路径和

8、给定一个元素为非负整数的二位数组matrix，每行和每列都是从小到大有序的。再给定一个一个非负整数aim，请判断aim是否在matrix中
比如: aim=7  从左上角开始查找，
[
 1 5  9 10
 2 6 11 13
 7 9 15 17
]
