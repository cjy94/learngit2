1、LRU缓存， Latest Recent Unsed(最近最久未使用)
java 中的LinkedHashMap可以实现LRU的功能， (双向链表 + 哈希表结构)

设计LRU缓存结构， 该结构在构造时确定大小， 假设大小为k， 并有如下两个功能
set(key, value): 将记录(key, value)插入该结构
get(key): 返回key对应的value值

要求：
1、set和get方法的时间复杂度O(1)
2、某个key的set或get操作一旦发生，认为这个key的记录成了最常使用的
3、当缓存的大小超过k时，移除最不经常使用的记录， 即set或get最久远的

自己实现的话，可以使用哈希表结构和双向链表实现

2、给定一组正整数， 从第一个数向左后一个数方向跳跃，每次至少跳跃1格，每个数的值表示从这个位置可以跳跃的最大长度， 计算如何以最少的跳跃次数跳到最后一个数。
[2 3 2 1 2 1 5]  输出3
 0 1 2 3 4 5 6

3、给定两个有序数组arr1和arr2， 再给定一个整数k，返回来自arr1和arr2的两个数相加和最大的前k个，两个数必须分别来自两个数组

堆的应用： 创建一个大根堆，
dp[][]
[3 5 7 9 11]
[1 2 3 4 5]
Node(index1, index2, sum)


补充题目：在一个二维数组中， 每一行有序，每一列也有序，但整体无序，输出二维数组中，最小的前k个元素
[1  2  3  4  5  6  7]
[2  6  8  9 10 11 13]
[3  7  9 11 14 16 19]
[8 17 29 34 54 67 99]

创建一个小根堆， 从左上角开始遍历元素，依次放入到小根堆中

4、给定两个数组arrx和arry， 长度都为N, 代表二维平面上有N个点，第i个点的x坐标和y坐标分别为arrx[i]和arry[i], 返回求一条直线最多能穿过多少个点？

5、字符串的交错组成问题
str1="AB"  str2="12"  可以交错出的字符串有："AB12" "A1B2" "1A2B" "1AB2"

