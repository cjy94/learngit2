1、旋转数组的问题
问题1：有序数组arr可能经过一次旋转处理，也可能没有， 且arr可能存在重复的数，例如，有序数组[1,2,3,4,5,6,7], 可以旋转处理成[4,5,6,7,1,2,3]等。
 给定一个可能旋转过的有序数组arr， 找出数组中的最小值
问题2： 有序数组arr可能经过一次旋转处理，也可能没有， 且arr可能存在重复的数，例如，有序数组[1,2,3,4,5,6,7], 可以旋转处理成[4,5,6,7,1,2,3]等。
给定一个可能旋转过的有序数组arr， 再给定一个数num， 返回arr中是否包含有num。

核心思想： 尽量使用二分进行查找 O(logN), 最坏情况是O(N)


2、给定两个字符串S和T，返回S子序列等于T的不同子序列个数有多少个？ 如果得到子序列A删除的位置与得到子序列B删除的位置不同，那么认为A和B就是不同的。
例如： S="rabbbit"  T="rabbit"， 有3种
尝试模型： S和T一个做行， 一个做列
dp[i][j]: s[0...i]有多少子序列形成的字面值是等于T[0...j]

3、给定一个只由'0'~'9'字符组成的字符串num, 和整数target。可以用+,-和*连接， 返回num得到target的所有不同方法
例如：
num="123" target=6
输出：["1+2+3", "1*2*3"]

num="105" target=5
输出：["1*0+5", "10-5"]












zigzag打印二叉树
链表每k个节点之间逆序
定义一种新型字符串： "AcBkksTafff"
新型字符串的规则： 1）可能是单独的一个小写字母（单小）； 2）可能是一个大写字母和一个小写字母（大小）； 3）可能是两个大写字母（大大）
任意给定一个字符串，判断是否是新型字符串？
